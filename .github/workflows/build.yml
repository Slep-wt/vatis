name: Build Client

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

env:
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
  TEST_VERSION: ${{ !startsWith(github.ref, 'refs/tags/v') }}

jobs:
  build:

    runs-on: windows-latest

    steps:

    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'

    - uses: actions/cache@v2
      with:
        path: ${{ github.workspace }}/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Build client
      working-directory: ./Vatsim.Vatis
      run: |
        dotnet publish --runtime win-x64 --self-contained true --configuration Release -p:PublishReadyToRun=true --output ./publish
        $hash = (Get-FileHash .\publish\vATIS.exe -Algorithm SHA256).Hash.ToLower()
        echo "CLIENT_HASH=$hash" >> $env:GITHUB_ENV
        $path = ls .\publish\vATIS.dll | select -First 1 | % fullname
        $version = [System.Diagnostics.FileVersionInfo]::GetVersionInfo($path).ProductVersion
        echo "CLIENT_VER=$version" >> $env:GITHUB_ENV
        "!define Version ""$version""" | Out-File -FilePath ..\Installer\Version.txt

    - name: Checkout auth repository
      uses: actions/checkout@v3
      with:
        repository: vatis-project/auth
        path: auth
        token: ${{ secrets.GH_TOKEN }}

    - name: Build auth library
      working-directory: auth
      run: |
        cmake -E make_directory build
        cd build
        cmake .. -DCLIENT_HASH=${{ env.CLIENT_HASH }} -DVATSIM_CLIENT_ID=${{ secrets.CLIENT_ID }} -DVATSIM_CLIENT_KEY=${{ secrets.CLIENT_KEY }} -DTEST_VERSION=${{ env.TEST_VERSION }}
        cmake --build . --config RelWithDebInfo
        Copy-Item -Path .\RelWithDebInfo\VatsimAuth.dll -Destination ..\..\Vatsim.Vatis\publish\

    - name: Create installer
      uses: joncloud/makensis-action@v4
      with:
        script-file: '.\Installer\installer.nsi'

    - name: Create updater
      uses: joncloud/makensis-action@v4
      with:
        script-file: '.\Installer\updater.nsi'

    - name: Move installer
      working-directory: Installer
      shell: bash
      run: |
        mv vATIS-Setup-${{ env.CLIENT_VER }}.exe ..

    - name: Move updater
      working-directory: Installer
      shell: bash
      run: |
        mv vATIS-Update-${{ env.CLIENT_VER }}.exe ..

    - name: Upload installer
      uses: actions/upload-artifact@v3
      with:
        name: vATIS-Setup-${{ env.CLIENT_VER }}
        path: vATIS-Setup-${{ env.CLIENT_VER }}.exe

    - name: Upload updater
      uses: actions/upload-artifact@v3
      with:
        name: vATIS-Update-${{ env.CLIENT_VER }}
        path: vATIS-Update-${{ env.CLIENT_VER }}.exe

    - name: Get version
      id: get_version
      uses: battila7/get-version-action@v2

    - name: Create release notes
      shell: bash
      run: |
        cat > CHANGELOG.txt << EOF
        ðŸ”— [Download vATIS](https://github.com/vatis-project/vatis/releases/download/${{ steps.get_version.outputs.version }}/vATIS-Setup-${{ env.CLIENT_VER }}.exe)
        ---
        ### Added
        ### Changed
        ### Fixed
        EOF

    - name: Create release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        name: vATIS ${{ env.CLIENT_VER }}
        prerelease: true
        draft: true
        body_path: CHANGELOG.txt
        files: |
          vATIS-Setup-${{ env.CLIENT_VER }}.exe
          vATIS-Update-${{ env.CLIENT_VER }}.exe
